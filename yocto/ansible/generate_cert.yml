- name: clean results from older runs
  file:
    path: "{{cert_path}}"
    state: absent

- name: Create cert directory
  file:
    path: "{{cert_path}}"
    state: directory

- name: Generate CA private key
  become: true
  openssl_privatekey:
    path: "{{cert_path + '/uscope_root.key'}}"
    cipher: auto
    passphrase: ca_password
    size: 4096

- name: Generate CA cert
  command: "openssl req -new -x509 -days 10000 -key {{cert_path + '/uscope_root.key'}}  -out {{cert_path + '/uscope_root.crt'}}  -passin pass:ca_password -subj '/C=IT/O=uscope/CN=uscope_root'"

- name: Generate server private key
  openssl_privatekey:
    path: "{{cert_path + '/uscope_0.pem'}}"
    type: RSA
    size: 4096

- name: generate server CSR
  openssl_csr:
    path: "{{cert_path + '/uscope_0.csr'}}"
    privatekey_path: "{{cert_path + '/uscope_0.pem'}}"
    common_name: uscope_0.local
    subject_alt_name: DNS:uscope_0.local
    
- name: Sign server certificate with CA
  community.crypto.x509_certificate:
    path: "{{cert_path + '/uscope_0.crt'}}"
    csr_path: "{{cert_path + '/uscope_0.csr'}}"
    ownca_path: "{{cert_path + '/uscope_root.crt'}}"
    ownca_privatekey_path: "{{cert_path + '/uscope_root.key'}}"
    ownca_privatekey_passphrase: ca_password
    provider: ownca

- name: Delete CA key to avoid leaks
  file:
    path: "{{cert_path + '/uscope_root.key'}}"
    state: absent

- name: Download CA certificate
  fetch:
    src: "{{cert_path + '/uscope_root.crt'}}"
    dest: "uscope_root.crt"
    flat: yes